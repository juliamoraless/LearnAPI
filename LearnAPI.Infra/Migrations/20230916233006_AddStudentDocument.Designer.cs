// <auto-generated />
using System;
using LearnAPI.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearnAPI.Infra.Migrations
{
    [DbContext(typeof(LearnContext))]
    [Migration("20230916233006_AddStudentDocument")]
    partial class AddStudentDocument
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LearnAPI.Domain.Models.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Turno")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("LearnAPI.Domain.Models.Mentor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Mentors");
                });

            modelBuilder.Entity("LearnAPI.Domain.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar");

                    b.Property<Guid>("MentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("MentorId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("LearnAPI.Domain.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar");

                    b.Property<Guid>("MentorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("MentorId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LearnAPI.Domain.Models.Mentor", b =>
                {
                    b.HasOne("LearnAPI.Domain.Models.Classroom", "Classroom")
                        .WithMany("Mentors")
                        .HasForeignKey("ClassroomId")
                        .IsRequired();

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("LearnAPI.Domain.Models.Project", b =>
                {
                    b.HasOne("LearnAPI.Domain.Models.Classroom", "Classroom")
                        .WithMany("Projects")
                        .HasForeignKey("ClassroomId")
                        .IsRequired();

                    b.HasOne("LearnAPI.Domain.Models.Mentor", "Mentor")
                        .WithMany("Projects")
                        .HasForeignKey("MentorId")
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("LearnAPI.Domain.Models.Student", b =>
                {
                    b.HasOne("LearnAPI.Domain.Models.Classroom", "Classroom")
                        .WithMany("Students")
                        .HasForeignKey("ClassroomId")
                        .IsRequired();

                    b.HasOne("LearnAPI.Domain.Models.Mentor", "Mentor")
                        .WithMany("Students")
                        .HasForeignKey("MentorId")
                        .IsRequired();

                    b.HasOne("LearnAPI.Domain.Models.Project", "Project")
                        .WithMany("Students")
                        .HasForeignKey("ProjectId")
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Mentor");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("LearnAPI.Domain.Models.Classroom", b =>
                {
                    b.Navigation("Mentors");

                    b.Navigation("Projects");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("LearnAPI.Domain.Models.Mentor", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("LearnAPI.Domain.Models.Project", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
